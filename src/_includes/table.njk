<table>
	<tr>
	  <th>Country</th>
	  <th>Apple Market Share</th>
	  <th>Android Market Share</th>
	</tr>
	{% for entry in marketShare %}
	<tr>
	  <td>{{ entry.country }}</td>
	  <td>{{ entry.iphone }}%</td>
	  <td>{{ entry.android }}%</td>
	</tr>
	{% endfor %}
</table>

<script>
  // Tablesort implementation with visual indicators
  document.addEventListener("DOMContentLoaded", () => {
    const tables = document.querySelectorAll("table")
    tables.forEach((table) => {
      table.querySelectorAll("th").forEach((header, index) => {
        header.addEventListener("click", () => {
          const rows = Array.from(
            table.querySelectorAll("tr:nth-child(n+2)")
          )
          const isAscending = header.classList.contains("sorted-asc")
          const direction = isAscending ? -1 : 1

          rows.sort((rowA, rowB) => {
            const cellA = rowA.children[index].textContent.trim()
            const cellB = rowB.children[index].textContent.trim()

            const numA = parseFloat(cellA)
            const numB = parseFloat(cellB)

            if (!isNaN(numA) && !isNaN(numB)) {
              return (numA - numB) * direction
            }
            return cellA.localeCompare(cellB) * direction
          })

          rows.forEach((row) => table.appendChild(row))

          table.querySelectorAll("th").forEach((th) => {
            th.classList.remove("sorted-asc", "sorted-desc")
            th.textContent = th.textContent.replace(/ ▲| ▼/g, "")
          })
          header.classList.toggle("sorted-asc", !isAscending)
          header.classList.toggle("sorted-desc", isAscending)
          header.textContent += isAscending ? " ▼" : " ▲"
        })
      })
    })
  })
</script>